{"version":3,"sources":["context/user/userContext.js","components/auth/Login.js","components/Spinner.js","components/layout/FormEdit.js","components/layout/Sidebar.js","components/layout/Bar.js","components/layout/Cards.js","components/layout/Post.js","components/Panel.js","context/user/userReducer.js","types/index.js","context/user/userState.js","components/Album.js","components/layout/Galery.js","components/route/RoutePrivate.js","App.js","serviceWorker.js","index.js"],"names":["userContext","createContext","Login","userCont","useContext","saveTokenFn","token","useState","email","password","user","saveUser","error","changeError","userError","changeUserError","onChangePage","e","target","name","value","onSubmitToken","a","trim","axios","post","res","data","className","htmlFor","type","id","placeholder","onChange","onClick","to","Spinner","FormEdit","userActually","cancelEditFn","editUserFn","first_name","last_name","avatar","actualUser","getActualuser","onChangeUser","onSubmit","preventDefault","src","alt","Sidebar","editUser","layoutUsers","layoutPost","backPanelFn","buttonAlbum","buttonBack","buttonGoPanelFn","buttonGoAlbumFn","loadingEdit","Bar","useCont","tokenChange","href","Cards","lastname","getIdFn","changeLayoutFn","Post","listPosts","deletePostFn","loadingState","map","key","title","body","Panel","listUsers2","use","state","action","find","payload","listUsers","filter","userId","concat","galeryActive","pageId","parseInt","apiPhotos","galeryState","photo","albumId","loadingGalery","UserState","props","useReducer","userReducer","dispatch","useEffect","getPhotosFn","get","getUsers","getSecondPage","getPosts","setTimeout","Provider","document","querySelector","scrollIntoView","behavior","console","log","actuallyIdGaleryFn","galeryStateFn","getGaleryFn","children","Album","Galery","idParam","useParams","image","thumbnailUrl","RoutePrivate","Component","component","render","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bc04eb3a.chunk.js","sourcesContent":["import { createContext } from 'react';\nconst userContext = createContext();\nexport default userContext;","import axios from \"axios\";\nimport React, { useState, useContext, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport userContext from \"../../context/user/userContext\";\n\nconst Login = () => {\n  const userCont = useContext(userContext);\n  const { saveTokenFn, token } = userCont;\n\n  //State\n  const [user, saveUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [error, changeError] = useState(false);\n  const [userError, changeUserError] = useState(false);\n\n  const { email, password } = user;\n\n  const onChangePage = (e) => {\n    saveUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmitToken = async () => {\n    if (email.trim() === \"\" || password.trim() === \"\") {\n      //mostrarAlerta('Todos los campos son obligatorios','alerta-error');\n      changeError(true);\n      return;\n    }\n    changeError(false);\n    try {\n      let res = await axios.post(\"https://reqres.in/api/login\", user);\n      saveTokenFn(res.data);\n    } catch (error) {\n      changeUserError(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      {token === false ? (\n        <div className=\"form-usuario\">\n          <div className=\"contenedor-form\">\n            <h1>Sign In</h1>\n\n            <form>\n              <div className=\"campo-form\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"eve.holt@reqres.in\"\n                  value={email}\n                  onChange={onChangePage}\n                />\n              </div>\n              <div className=\"campo-form\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={password}\n                  placeholder=\"Any works\"\n                  onChange={onChangePage}\n                />\n              </div>\n              <div className=\"campo-form\">\n                <input\n                  type=\"button\"\n                  className=\"btn btn-primario btn-block\"\n                  value=\"Log In\"\n                  onClick={() => onSubmitToken()}\n                />\n              </div>\n            </form>\n            {error ? (\n              <h1 className=\"alerta-error\">All fields are required</h1>\n            ) : null}\n            {userError ? (\n              <h1 className=\"alerta-error\">User Incorrect</h1>\n            ) : null}\n          </div>\n        </div>\n      ) : (\n        <Redirect to=\"/panel-users/\" />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n    return ( \n        <div className=\"sk-circle\">\n                <div className=\"sk-circle1 sk-child\"></div>\n                <div className=\"sk-circle2 sk-child\"></div>\n                <div className=\"sk-circle3 sk-child\"></div>\n                <div className=\"sk-circle4 sk-child\"></div>\n                <div className=\"sk-circle5 sk-child\"></div>\n                <div className=\"sk-circle6 sk-child\"></div>\n                <div className=\"sk-circle7 sk-child\"></div>\n                <div className=\"sk-circle8 sk-child\"></div>\n                <div className=\"sk-circle9 sk-child\"></div>\n                <div className=\"sk-circle10 sk-child\"></div>\n                <div className=\"sk-circle11 sk-child\"></div>\n                <div className=\"sk-circle12 sk-child\"></div>\n        </div>\n     );\n}\n \nexport default Spinner;","import React, { Fragment, useContext, useState } from \"react\";\nimport userContext from \"../../context/user/userContext\";\n\nconst FormEdit = () => {\n  const userCont = useContext(userContext);\n  const { userActually, cancelEditFn, editUserFn } = userCont;\n\n  const [actualUser, getActualuser] = useState({\n    id: userActually.id,\n    first_name: userActually.first_name,\n    last_name: userActually.last_name,\n    email: userActually.email,\n    avatar: userActually.avatar,\n  });\n\n  const onChangeUser = (e) => {\n    getActualuser({\n      ...actualUser,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmitUser = (e) => {\n    e.preventDefault();\n    editUserFn(actualUser);\n  };\n\n  return (\n    <Fragment>\n      <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmitUser}>\n        <img className=\"card-header\" src={userActually.avatar} alt=\"\" />\n        <p>Name:</p>\n        <input\n          type=\"text\"\n          className=\"input-text wrapp\"\n          name=\"first_name\"\n          onChange={onChangeUser}\n          value={actualUser.first_name}\n        />\n        <p>LastName:</p>\n        <input\n          type=\"text\"\n          className=\"input-text wrapp\"\n          name=\"last_name\"\n          onChange={onChangeUser}\n          value={actualUser.last_name}\n        />\n        <p>Email:</p>\n        <input\n          type=\"text\"\n          className=\"input-text\"\n          name=\"email\"\n          onChange={onChangeUser}\n          value={actualUser.email}\n        />\n        <input\n          type=\"submit\"\n          className=\"btn btn-primario btn-block\"\n          value=\"Edit User\"\n        />\n      </form>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-block btn-primario\"\n        onClick={() => cancelEditFn()}\n      >\n        Cancel\n      </button>\n    </Fragment>\n  );\n};\n\nexport default FormEdit;\n","import React, { useContext, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport userContext from \"../../context/user/userContext\";\nimport Spinner from \"../Spinner\";\nimport FormEdit from \"./FormEdit\";\n\nconst Sidebar = () => {\n  const userCont = useContext(userContext);\n  const {\n    userActually,\n    editUser,\n    layoutUsers,\n    layoutPost,\n    backPanelFn,\n    buttonAlbum,\n    buttonBack,\n    buttonGoPanelFn,\n    buttonGoAlbumFn,\n    loadingEdit,\n  } = userCont;\n\n  return (\n    <aside>\n      <h1>\n        Venture<span>App</span>\n      </h1>\n      <div className=\"proyectos\">\n        {loadingEdit ? (\n          <Spinner />\n        ) : (\n          <Fragment>\n            {editUser && layoutUsers ? (\n              <Fragment>\n                <FormEdit userActually={userActually} />\n              </Fragment>\n            ) : layoutPost ? (\n              <div>\n                <img className=\"center\" src={userActually.avatar} alt=\"\" />\n                <b></b>\n                <h2>{userActually.first_name}</h2>\n                <h2>{userActually.last_name}</h2>\n                <h3>{userActually.email}</h3>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-block btn-primario\"\n                  onClick={() => backPanelFn()}\n                >\n                  Back Users\n                </button>\n              </div>\n            ) : (\n              <Fragment>\n                {buttonAlbum === true && buttonBack === false ? (\n                  <Fragment>\n                    <h2>Select a user and update it here!!</h2>\n\n                    <Link to={\"/panel-users/albums\"}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-block btn-primario\"\n                        onClick={() => buttonGoAlbumFn()}\n                      >\n                        Albums\n                      </button>\n                    </Link>\n                  </Fragment>\n                ) : null}\n                {buttonAlbum === false && buttonBack === true ? (\n                  <Link to={'/panel-users/'}>\n                  <button\n                      type=\"button\"\n                      className=\"btn btn-block btn-primario\"\n                      onClick={()=>buttonGoPanelFn()}\n                  >Return Panel User</button>\n                  </Link>\n                ) : null}\n                <br></br>\n                <br></br>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from \"react\";\nimport userContext from \"../../context/user/userContext\";\n\nconst Bar = () => {\n  const useCont = useContext(userContext);\n  const { layoutPost, tokenChange } = useCont;\n\n  return (\n    <header className=\"app-header\">\n      {layoutPost ? (\n        <p className=\"nombre-usuario\">Publications</p>\n      ) : (\n        <p className=\"nombre-usuario\">\n          Hi! <span>Good to see you again</span>\n        </p>\n      )}\n      <nav className=\"nav-principal\">\n        <a\n          href=\"/\"\n          className=\"btn btn-blank cerrar-sesion\"\n          onClick={() => tokenChange()}\n        >\n          Log out\n        </a>\n      </nav>\n    </header>\n  );\n};\n\nexport default Bar;\n","import React, { useContext } from \"react\";\nimport userContext from \"../../context/user/userContext\";\n\nconst Cards = ({ name, lastname, avatar, id, email }) => {\n  const userCont = useContext(userContext);\n  const { getIdFn, changeLayoutFn } = userCont;\n\n  return (\n    <div className=\"center\">\n      <div className=\"property-card\">\n        <div className=\"property-image\">\n          <h2>\n            {name} {lastname}\n          </h2>\n          <p>{email}</p>\n        </div>\n        <div className=\"property-description\">\n          <div className=\"property-image-title\">\n            <img src={avatar} alt=\"\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"estado\">\n        <button\n          onClick={() => {\n            getIdFn(id);\n          }}\n          type=\"button\"\n          className=\"incompleto\"\n        >\n          Edit user\n        </button>\n        <button\n          onClick={() => {\n            changeLayoutFn(id);\n          }}\n          type=\"button\"\n          className=\"completo\"\n        >\n          Posts\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { Fragment, useContext } from \"react\";\nimport userContext from \"../../context/user/userContext\";\nimport Spinner from \"../Spinner\";\n\nconst Post = () => {\n  const userCont = useContext(userContext);\n  const { listPosts, deletePostFn, userActually, loadingState } = userCont;\n\n  return (\n    <Fragment>\n      {loadingState ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className=\"row mg\">\n            <h2>{userActually.first_name}'s Posts</h2>\n            {listPosts.map((post) => (\n              <div key={post.id} className=\"column\">\n                <div className=\"card\">\n                  <figure className=\"fir-image-figure\">\n                    <figcaption>\n                      <div className=\"fig-author-figure-title\">\n                        <b>Title: </b>\n                        {post.title}\n                      </div>\n                      <div className=\"fig-author-figure-title\">\n                        <b>Body: </b>\n                        {post.body}\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"btn-primario\"\n                        onClick={() => deletePostFn(post.id)}\n                      >\n                        Delete\n                      </button>\n                    </figcaption>\n                  </figure>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Post;\n","import React, { Fragment, useContext } from \"react\";\nimport Sidebar from \"../components/layout/Sidebar\";\nimport Bar from \"../components/layout/Bar\";\nimport userContext from \"../context/user/userContext\";\nimport Cards from \"./layout/Cards\";\nimport Post from \"./layout/Post\";\n\nconst Panel = () => {\n  const userCont = useContext(userContext);\n  const { layoutUsers, listUsers2 } = userCont;\n\n  return (\n    <div className=\"contenedor-app\">\n      <Sidebar />\n      <div className=\"seccion-principal\">\n        <Bar />\n        {layoutUsers ? (\n          <Fragment>\n            <main>\n              <div className=\"contenedor-tareas\">\n                <div className=\"wrapper\">\n                  {listUsers2.map((use) => (\n                    <Cards\n                      key={use.id}\n                      id={use.id}\n                      name={use.first_name}\n                      lastname={use.last_name}\n                      avatar={use.avatar}\n                      email={use.email}\n                    />\n                  ))}\n                </div>\n              </div>\n            </main>\n          </Fragment>\n        ) : (\n          <Post />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Panel;\n","import {\n  LIST_USER,\n  GET_ID,\n  ACTIVE_POST,\n  POSTS,\n  RETURN_PANEL,\n  DELETE_POST,\n  GET_SECPAGE,\n  ALBUM_ACTIVE,\n  BUTTON_BACK,\n  ID_GALLERY,\n  SAVE_PHOTOS,\n  STATE_PHOTOS,\n  GALERY_ACTIVE,\n  CANCEL_EDIT,\n  EDIT_USER,\n  SPINNER_LOADING,\n  SPINNER_GALERY,\n  TOKEN,\n  TOKEN_STATE,\n  SPINNER_EDIT,\n} from \"../../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    //Obtiene el id del usuario\n    case GET_ID:\n      return {\n        ...state,\n        userActually: state.listUsers2.find(\n          (user) => user.id === action.payload\n        ),\n        editUser: true,\n        loadingEdit: false,\n      };\n    //Obtener datos de la API\n    case LIST_USER:\n      return {\n        ...state,\n        listUsers: action.payload,\n      };\n\n    //Cambiar Layout\n    case ACTIVE_POST:\n      return {\n        ...state,\n        layoutUsers: false,\n        layoutPost: true,\n        userActually: state.listUsers2.find(\n          (user) => user.id === action.payload\n        ),\n      };\n    case POSTS:\n      return {\n        ...state,\n        listPosts: action.payload.filter(\n          (post) => post.userId === state.userActually.id\n        ),\n        loadingState: false,\n      };\n    case RETURN_PANEL:\n      return {\n        ...state,\n        layoutPost: false,\n        layoutUsers: true,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        listPosts: state.listPosts.filter((post) => post.id !== action.payload),\n      };\n    case GET_SECPAGE:\n      return {\n        ...state,\n        listUsers2: state.listUsers.concat(action.payload),\n      };\n    case ALBUM_ACTIVE:\n      return {\n        ...state,\n        buttonAlbum: true,\n        buttonBack: false,\n      };\n    case BUTTON_BACK:\n      return {\n        ...state,\n        buttonAlbum: false,\n        buttonBack: true,\n        galeryActive: false,\n      };\n    case ID_GALLERY:\n      return {\n        ...state,\n        pageId: parseInt(action.payload),\n      };\n    case SAVE_PHOTOS:\n      return {\n        ...state,\n        apiPhotos: action.payload,\n      };\n    case STATE_PHOTOS:\n      return {\n        ...state,\n        galeryState: state.apiPhotos.filter(\n          (photo) => photo.albumId === state.pageId\n        ),\n        loadingGalery: false,\n      };\n    case GALERY_ACTIVE:\n      return {\n        ...state,\n        galeryActive: true,\n      };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        editUser: false,\n      };\n    case EDIT_USER:\n      return {\n        ...state,\n        listUsers2: state.listUsers2.map((user) =>\n          user.id === action.payload.id ? action.payload : user\n        ),\n        editUser: false,\n      };\n    case SPINNER_LOADING:\n      return {\n        ...state,\n        loadingState: true,\n      };\n    case SPINNER_GALERY:\n      return {\n        ...state,\n        loadingGalery: true,\n      };\n    case TOKEN:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    case TOKEN_STATE:\n      return {\n        ...state,\n        token: false,\n      };\n    case SPINNER_EDIT:\n      return {\n        ...state,\n        loadingEdit: true,\n      };\n    default:\n      return state;\n  }\n};\n","export const GET_ID = 'GET_ID';\nexport const LIST_USER = 'LIST_USER';\nexport const ADD_PAGE = 'ADD_PAGE';\nexport const REST_PAGE = 'REST_PAGE';\nexport const ACTIVE_POST = 'ACTIVE_POST';\n\nexport const POSTS = 'POSTS';\nexport const RETURN_PANEL = 'RETURN_PANEL';\nexport const DELETE_POST = 'DELETE_POST';\nexport const GET_SECPAGE = 'GET_SECPAGE';\nexport const ALBUM_ACTIVE = 'ALBUM_ACTIVE';\nexport const BUTTON_BACK = 'BUTTON_BACK';\nexport const ID_GALLERY = 'ID_GALLERY';\nexport const SAVE_PHOTOS = 'SAVE_PHOTOS';\nexport const STATE_PHOTOS = 'STATE_PHOTOS';\nexport const GALERY_ACTIVE = 'ACTIVE_GALERY';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const EDIT_USER = 'EDIT_USER';\nexport const FULL_USERS = 'FULL_USERS';\nexport const SPINNER_LOADING = 'SPINNER_LOADING';\nexport const SPINNER_GALERY = 'SPINNER_GALERY';\nexport const TOKEN = 'TOKEN';\nexport const TOKEN_STATE='TOKEN_STATE';\nexport const SPINNER_EDIT = 'SPINNER_EDIT';","import React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport userContext from \"./userContext\";\nimport userReducer from \"./userReducer\";\nimport {\n  LIST_USER,\n  GET_ID,\n  ACTIVE_POST,\n  POSTS,\n  RETURN_PANEL,\n  DELETE_POST,\n  GET_SECPAGE,\n  ALBUM_ACTIVE,\n  BUTTON_BACK,\n  ID_GALLERY,\n  SAVE_PHOTOS,\n  STATE_PHOTOS,\n  GALERY_ACTIVE,\n  CANCEL_EDIT,\n  EDIT_USER,\n  SPINNER_GALERY,\n  SPINNER_LOADING,\n  TOKEN,\n  TOKEN_STATE,\n  SPINNER_EDIT,\n} from \"../../types\";\n\nconst UserState = (props) => {\n  const initialState = {\n    editUser: false,\n    layoutUsers: true,\n    layoutPost: false,\n    listUsers2: [],\n    userActually: null,\n    listPosts: [],\n    buttonAlbum: true,\n    buttonBack: false,\n    pageId: 0,\n    apiPhotos: [],\n    galeryState: [],\n    galeryActive: false,\n    token: false,\n    loadingState: false,\n    loadingGalery: false,\n    loadingEdit: false,\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  const tokenChange = () => {\n    dispatch({\n      type: TOKEN_STATE,\n    });\n  };\n\n  //User active\n  const getIdFn = (id) => {\n    dispatch({\n      type: SPINNER_EDIT,\n    });\n    const scroll = document.querySelector(\".app-header\");\n    scroll.scrollIntoView({ behavior: \"smooth\" });\n\n    setTimeout(() => {\n      dispatch({\n        type: GET_ID,\n        payload: id,\n      });\n    }, 1000);\n  };\n\n  //Change Layout\n  const changeLayoutFn = (id) => {\n    dispatch({\n      type: ACTIVE_POST,\n      payload: id,\n    });\n  };\n\n  //Return Panel\n  const backPanelFn = () => {\n    dispatch({\n      type: RETURN_PANEL,\n    });\n  };\n  //Delete post\n  const deletePostFn = (id) => {\n    console.log(id);\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n  };\n\n  //Botones para moverse en la página\n  const buttonGoPanelFn = () => {\n    dispatch({\n      type: ALBUM_ACTIVE,\n    });\n  };\n  //ButtonBack\n  const buttonGoAlbumFn = () => {\n    dispatch({\n      type: BUTTON_BACK,\n    });\n  };\n\n  const actuallyIdGaleryFn = (id) => {\n    console.log(id);\n    dispatch({\n      type: ID_GALLERY,\n      payload: id,\n    });\n  };\n\n  const galeryStateFn = () => {\n    dispatch({\n      type: GALERY_ACTIVE,\n    });\n  };\n\n  const getGaleryFn = () => {\n    dispatch({\n      type: SPINNER_GALERY,\n    });\n    setTimeout(() => {\n      dispatch({\n        type: STATE_PHOTOS,\n      });\n    }, 2000);\n  };\n  const cancelEditFn = () => {\n    dispatch({\n      type: CANCEL_EDIT,\n    });\n  };\n\n  const editUserFn = (user) => {\n    console.log(user);\n    dispatch({\n      type: EDIT_USER,\n      payload: user,\n    });\n  };\n\n  const saveTokenFn = (token) => {\n    dispatch({\n      type: TOKEN,\n      payload: token,\n    });\n  };\n\n  useEffect(() => {\n    const getPhotosFn = async () => {\n      const url = `https://jsonplaceholder.typicode.com/photos`;\n      const res = await axios.get(url);\n      dispatch({\n        type: SAVE_PHOTOS,\n        payload: res.data,\n      });\n    };\n    const getUsers = async () => {\n      const url = `https://reqres.in/api/users?page=1`;\n      const res = await axios.get(url);\n      dispatch({\n        type: LIST_USER,\n        payload: res.data.data,\n      });\n    };\n    const getSecondPage = async () => {\n      const url = `https://reqres.in/api/users?page=2`;\n      const res = await axios.get(url);\n      dispatch({\n        type: GET_SECPAGE,\n        payload: res.data.data,\n      });\n    };\n    const getPosts = async () => {\n      const url = `https://jsonplaceholder.typicode.com/posts`;\n      const res = await axios.get(url);\n      dispatch({\n        type: SPINNER_LOADING,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: POSTS,\n          payload: res.data,\n        });\n      }, 2000);\n    };\n    if (state.layoutPost) {\n      getPosts();\n    }\n\n    getUsers();\n    getSecondPage();\n    getPhotosFn();\n  }, [state.layoutPost, state.galeryActive, state.loadingEdit]);\n\n  return (\n    <userContext.Provider\n      value={{\n        editUser: state.editUser,\n        listUsers: state.listUsers,\n        userActually: state.userActually,\n        layoutUsers: state.layoutUsers,\n        layoutPost: state.layoutPost,\n        listPosts: state.listPosts,\n        listUsers2: state.listUsers2,\n        buttonAlbum: state.buttonAlbum,\n        buttonBack: state.buttonBack,\n        pageId: state.pageId,\n        galeryState: state.galeryState,\n        loadingState: state.loadingState,\n        loadingGalery: state.loadingGalery,\n        loadingEdit: state.loadingEdit,\n        token: state.token,\n        getIdFn,\n        saveTokenFn,\n        changeLayoutFn,\n        backPanelFn,\n        deletePostFn,\n        actuallyIdGaleryFn,\n        galeryStateFn,\n        getGaleryFn,\n        buttonGoAlbumFn,\n        buttonGoPanelFn,\n        cancelEditFn,\n        editUserFn,\n        tokenChange,\n      }}\n    >\n      {props.children}\n    </userContext.Provider>\n  );\n};\n\nexport default UserState;\n","import React, { useContext } from \"react\";\nimport Sidebar from \"./layout/Sidebar\";\nimport Bar from \"./layout/Bar\";\nimport userContext from \"../context/user/userContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Album = () => {\n  const userCont = useContext(userContext);\n  const { listUsers2, galeryStateFn } = userCont;\n\n  return (\n    <div className=\"contenedor-app\">\n      <Sidebar />\n      <div className=\"seccion-principal\">\n        <Bar />\n        <ul className=\"listado-tareas mg\">\n          <h1>Select an Album</h1>\n          {listUsers2.map((use) => (\n            <li key={use.id}>\n              <Link\n                onClick={() => galeryStateFn()}\n                to={`/panel-users/albums/${use.id}`}\n              >\n                <h3>\n                  {use.id}. {use.first_name}\n                </h3>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Album;\n","import React, { useContext, useEffect } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Bar from \"./Bar\";\nimport { useParams } from \"react-router-dom\";\nimport userContext from \"../../context/user/userContext\";\nimport Spinner from \"../Spinner\";\n\nconst Galery = () => {\n  const useCont = useContext(userContext);\n  const {\n    actuallyIdGaleryFn,\n    galeryState,\n    galeryActive,\n    getGaleryFn,\n    loadingGalery,\n  } = useCont;\n  const idParam = useParams().id;\n\n  useEffect(() => {\n    if (idParam > 0) {\n      actuallyIdGaleryFn(idParam);\n      getGaleryFn(idParam);\n    }\n    // eslint-disable-next-line\n  }, [galeryActive]);\n  return (\n    <div>\n      <div className=\"contenedor-app\">\n        <Sidebar />\n        <div className=\"seccion-principal\">\n          <Bar />\n          <h1>Galery</h1>\n          {loadingGalery ? (\n            <Spinner />\n          ) : (\n            galeryState.map((image) => (\n              <img key={image.id} src={image.thumbnailUrl} alt=\"Paris\" />\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Galery;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport userContext from \"../../context/user/userContext\";\n\nconst RoutePrivate = ({ component: Component, ...props }) => {\n  const userCont = useContext(userContext);\n  const { token } = userCont;\n\n  return (\n    <Route\n      {...props}\n      render={(props) =>\n        token ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default RoutePrivate;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./components/auth/Login\";\nimport Panel from \"./components/Panel\";\nimport UserState from \"./context/user/userState\";\nimport Album from \"./components/Album\";\nimport Galery from \"./components/layout/Galery\";\nimport RoutePrivate from \"./components/route/RoutePrivate\";\n\nfunction App() {\n  return (\n    <UserState>\n      <Router>\n        <Switch>\n          <RoutePrivate path=\"/panel-users/albums/:id\" component={Galery} />\n          <RoutePrivate path=\"/panel-users/albums/\" component={Album} />\n          <Route exact path=\"/\" component={Login} />\n          <RoutePrivate exact path=\"/panel-users/\" component={Panel} />\n        </Switch>\n      </Router>\n    </UserState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}